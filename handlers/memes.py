from brain import dp, types, ParseMode, openai, random, Dispatcher

async def send_meme(message: types.Message):
    print(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: {message.text}")
    meme = get_random_meme()
    await message.reply(meme, parse_mode=ParseMode.MARKDOWN)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–º–∞ —á–µ—Ä–µ–∑ OpenAI
def get_random_meme():
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o-mini", 
            messages=[
                {"role": "system", "content": "–¢—ã —Å–æ–∑–¥–∞—ë—à—å —Å–º–µ—à–Ω—ã–µ –º–µ–º—ã."},
                {"role": "user", "content": "–ù–∞–ø–∏—à–∏ —Å–º–µ—à–Ω–æ–π –º–µ–º –æ –∂–∏–∑–Ω–∏."}
            ],
            max_tokens=60,
            temperature=0.8

        )
        return response['choices'][0]['message']['content'].strip()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ–º–∞: {e}")
        memes = [
            "–ö–æ–≥–¥–∞ —Ç—ã –æ—Å–æ–∑–Ω–∞–ª, —á—Ç–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ —Å–Ω–æ–≤–∞ –Ω–∞—Å—Ç—É–ø–∏–ª... ü§¶‚Äç‚ôÇÔ∏è",
            "–ö–æ–≥–¥–∞ –≤—Å—Ç–∞–ª —Å –ø–æ—Å—Ç–µ–ª–∏, –Ω–æ —É–∂–µ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è. üò¥",
            "–ö–æ–≥–¥–∞ –ø—ã—Ç–∞–µ—à—å—Å—è –±—ã—Ç—å –≤–∑—Ä–æ—Å–ª—ã–º, –Ω–æ –≤–Ω—É—Ç—Ä–∏ –µ—â—ë —Ä–µ–±—ë–Ω–æ–∫. üß∏"
        ]
        return random.choice(memes)

def register(dp: Dispatcher):
    dp.register_message_handler(send_meme, commands=["memes"])
    print("memes —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.")